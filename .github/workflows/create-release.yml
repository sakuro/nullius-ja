name: Create release
on:
  pull_request:
    branches: [main]
    types: [closed]
jobs:
  Create-Release:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'release-v')
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure git and gh CLI
        uses: git-actions/set-user@v1
      - name: Detect target version
        id: version
        run: |
          NAME=nullius-ja
          VERSION=$(basename ${{ github.head_ref}} | sed -e 's/release-v//')
          echo "::set-output name=version::${VERSION}"
          echo "::set-output name=tag::v${VERSION}"
          echo "::set-output name=archive::${NAME}_${VERSION}.zip"
          echo "::set-output name=prefix::${NAME}_${VERSION}/"
      - name: Create a release on GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag "${{ steps.version.outputs.tag }}"
          git push --tags
          git archive --prefix "${{ steps.version.outputs.prefix }}" HEAD -o "${{ steps.version.outputs.archive }}"
          sed -ne '1d; /^-\{99\}$/q; s/^  //p' < changelog.txt | \
          gh release create "${{ steps.version.outputs.tag }}" -F=- -t "Release v${{ steps.version.outputs.version }}" "${{ steps.version.outputs.archive }}"
      - name: Upload the MOD to the MOD portal
        uses: ./.github/actions/upload
        with:
          mod_name: nullius-ja
          mod_version: "${{ steps.version.outputs.version }}"
          zip_name: "${{ steps.version.outputs.archive }}"
          api_key: ${{ secrets.MOD_PORTAL_API_KEY }}
